#include "ns.h"
#include <inc/lib.h>

extern union Nsipc nsipcbuf;

void
input(envid_t ns_envid)
{
	binaryname = "ns_input";

	// LAB 6: Your code here:
	// 	- read a packet from the device driver
	//	- send it to the network server
	// Hint: When you IPC a page to the network server, it will be
	// reading from it for a while, so don't immediately receive
	// another packet in to the same physical page.

	int len;

	while (1)
	{

		if (sys_page_alloc(0, &nsipcbuf, PTE_U | PTE_P | PTE_W) < 0)
		{
			cprintf("\n input.c: error in sys_page_alloc");
			continue;
		}
		len = sys_receive_packet(nsipcbuf.pkt.jp_data);
		if (len < 0)
		{
			// cprintf("\n input.c: error in receive");	
			sys_yield();
			continue;
		}
		else if (len == 0)
		{
			sys_yield();
			continue;
		}
		else 
		{
			//cprintf("\n input.c: ipc_send");
			nsipcbuf.pkt.jp_len = len;	
			ipc_send(ns_envid, NSREQ_INPUT, &nsipcbuf, PTE_P | PTE_U | PTE_W);
		}
		sys_page_unmap(0, &nsipcbuf);
	}
}
